openapi: 3.0.3
info:
  title: API Usuarios - OpenAPI 3.0
  description: |-
    Esta es una API de usuarios basada en la especificación OpenAPI 3.0.
    Some useful links:
    - [El repositorio de la API](https://github.com/aleort09/dsm52)
    - [Documentación de SWAPI](https://swapi.dev/documentation)
  termsOfService: http://swagger.io/terms/
  contact:
    email: elaleortoxde@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11

externalDocs:
  description: Más información sobre Swagger
  url: http://swagger.io

servers:
  - url: https://swapi.dev/api/

tags:
  - name: users
    description: Operaciones relacionadas con los usuarios

paths:
  /users:
    get:
      tags:
        - users
      summary: Obtener todos los usuarios
      description: Devuelve una lista de todos los usuarios registrados.
      operationId: getAllUsers
      responses:
        '200':
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Error interno del servidor

  /users/create:
    post:
      tags:
        - users
      summary: Crear un nuevo usuario
      description: Crea un usuario con los datos proporcionados.
      operationId: createUser
      requestBody:
        description: Datos del usuario a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario creado exitosamente
        '400':
          description: Datos inválidos

  /users/edit/{id}:
    post:
      tags:
        - users
      summary: Editar un usuario
      description: Modifica los datos de un usuario existente.
      operationId: editUser
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a editar
          schema:
            type: string
      requestBody:
        description: Nuevos datos del usuario
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado exitosamente
        '404':
          description: Usuario no encontrado

  /users/delete/{id}:
    delete:
      tags:
        - users
      summary: Eliminar un usuario
      description: Elimina un usuario basado en su ID.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a eliminar
          schema:
            type: string
      responses:
        '200':
          description: Usuario eliminado exitosamente
        '404':
          description: Usuario no encontrado

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "johndoe@example.com"